user nginx;
pid /var/run/nginx.pid;

events { worker_connections 1024; }


# handles http
http {

  server {
    listen 80;
    server_name holder.loc;

    location / {
      proxy_pass http://localhost:8010;
    }
  }

  server {
    listen 80;
    server_name ~^(.+)$;

    location / {
      proxy_pass http://localhost:8019;
    }
  }

  proxy_set_header Host $host;
  proxy_set_header X-Real-IP $remote_addr;
  proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
  proxy_set_header X-Forwarded-Proto $scheme;

  log_format basic '$remote_addr [$time_local] status=$status '
    'hostname=$hostname host=$host server_name=$server_name '
    'server_addr=$server_addr remote_addr=$remote_addr upstream_addr=$upstream_addr';
  access_log /var/log/nginx/access.log basic;
  error_log  /var/log/nginx/error.log debug;
}

# handles https
stream {

  include sites.conf;

  server {
    listen 443;
    proxy_pass $ssl_upstream_name;

    ssl_preread on;           # allow extract info from the ClientHello message at the preread phase.
    proxy_ssl_verify off;     # dont check cert of proxied server
    proxy_ssl_server_name on; # allow to pass server name to end server
  }

  log_format basic '$remote_addr [$time_local] protocol=$protocol status=$status '
    'hostname=$hostname server_name=$server_name '
    'ssl_preread_server_name=$ssl_preread_server_name server_addr=$server_addr remote_addr=$remote_addr upstream_addr=$upstream_addr';
  access_log /var/log/nginx/access.log basic;
  error_log  /var/log/nginx/error.log debug;
}

